@page "/PatientPage"
@using Microsoft.AspNetCore.Mvc.Diagnostics
@using DataClasses.Domain
@using System.Reflection.Metadata
@using System.Xml;
@using System.Xml.Linq
@using System.Xml.XPath
@using BusinessLogicLayer
@using BusinessLogicLayer.BusinessLogicLayerInterfaces

@inject ISelectPatientController SelectPatientController
@inject IViewCollectionController ViewCollectionController
@inject PatientDataDomain PatientDataModel
@inject NavigationManager NavManager;
@inject IJSRuntime JS;


<h3>@patientInfo.Name</h3>



<div class="row align-items-start" style="height: auto; width: auto">
    <div class="col">
        <div class="tabelcontainer" style="overflow: scroll; height: 500px; width: 400px">
            <EditForm Model="@PatientDataModel">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <table class="table table-striped table-bordered">
                    <tbody>
                        <tr>
                            <th>Modermærker</th>
                        </tr>
                        @foreach (var collection in CollectionList)
                        {
                            <tr @onclick="@((e) => NavigateToCollectionPage(e, collection.CollectionID))" style="cursor: pointer">
                                <td>
                                    @collection.CollectionName
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </EditForm>
        </div>
    </div>
    </div>


  

@code {

    private PatientInfoDomain patientInfo;
    public PatientDataDomain PatientData { get; set; }
    public List<CollectionDomain> CollectionList { get; set; }
    public string NameOfPatient { get; set; }
    public List<PictureDataDomain> PicDataList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //Bare for ikke at smide exception
        PatientData = new PatientDataDomain();
        CollectionList = PatientData.CollectionList;
        //patientData.CollectionList = new List<CollectionDomain>();

        patientInfo = SelectPatientController.SelectedPatient;

        NameOfPatient = patientInfo.Name;

        //patientData = SelectPatientController.GetPatientData(patientInfo);
    }

    private void NavigateToCollectionPage(MouseEventArgs e, object collectionId)
    {

        var selectedCollection = PatientData.CollectionList.Where(x => x.CollectionID.Equals(collectionId)).ToList();

        ViewCollectionController.SelectedCollection = selectedCollection[0];

        NavManager.NavigateTo("/CollectionPage");

    }

}


