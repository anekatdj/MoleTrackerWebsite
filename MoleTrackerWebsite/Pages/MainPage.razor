@page "/mainPage"

@using PW_BusinessLogicLayer.Interfaces
@using DataClasses.Domain
@using System.Drawing
@using System.Net.Mime
@using System.Diagnostics
@using System.Diagnostics.Eventing.Reader

@inject NavigationManager NavManager
@inject SessionInfo SessionInfo
@inject PatientInfo PatientInfo
@inject ILogInController LogInController


<link href="css/CSSStyles.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" /> @*EYE*@

@if (!SessionInfo.LoggedIn)
{
    NavManager.NavigateTo("/patientLogin");
}

<h1>Velkommen, @PatientInfo.Name</h1>

<p>Her kan du sammenligne de billeder, du har taget med MoleTracker, så du nemt og hurtigt kan se efter forandringer i dine modermærker.</p>

<div class="row align-items-start" style="height: auto; width: auto">

    <div class="col">
        <div class="tabelcontainer" style="overflow: scroll; height: 500px; width: 400px">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Personlige samlinger</th>
                    </tr>
                </thead>
                <tbody @onclick=NavigateToCollectionPage cursor="Hand">
                    @foreach (Collection collection in collections)
                    {
                        <tr>
                            <td>@collection.CollectionName</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>


    <div class="col">
        @*padding og sticky*@
        <div style="width: 400px">
            <img src="@FrontOrBack" style="float: right; width:@Width; height: @Height;" @onclick="GetCoordinates" /> @*onmousewheel="@MouseWheel"*@
            <button style="float:right" class="@Arrow" @onclick="TurnAroundModel"></button>

        </div>
    </div>

    @*636*1431 billedstørrelse*@



</div>

<div class="col align-self-end">
    @if (AddButtonPressed == false)
    {
        <button style="float: right; border-radius: 28px;" class="@AddCollectionButton" @onclick="ChoosePoint"></button>
        <label style="float: right; margin-right: 1%">Klik her for at tilføje en ny samling</label>
    }

    @if (AddButtonPressed == true)
    {
        @if (PointClicked == true)
        {
            <button style="float: right; border-radius: 28px;" @onclick="AcceptPosition">Godkend</button>
            <p style="float: right; color: crimson; margin-right: 15px">Vælg placering af modermærke</p>
        }
        @if (PointClicked == false)
        {
            <button style="float: right; border-radius: 28px;" disabled="@true">Godkend</button>
            <p style="float: right; color: crimson; margin-right: 15px">Vælg placering af modermærke</p>
        }
    }



</div>

<p style="font-size: 10px">Bemærk venligst at MoleTracker ikke diagnosticerer hudkræft. Hvis du er bekymret for et eller flere modermærker, skal du kontakte din læge.</p>





@code {

    #region Properties and fields

    private enum Orientation
    {
        Lower,
        Upper,
        Right,
        Left
    }

    private enum BodyPart
    {
        Shoulder,
        Arm,
        Hand,
        Finger,
        Thigh,
        Leg,
        Foot,
        Toe,
        Buttcheek,
        Back,
        Cheek,
        Nose,
        Forehead,
        Chin,
        Ear,
        Temple,
        Neck,
        None,
        Head
    }

    private BodyPart bodyPart = BodyPart.None;
    public string FrontOrBack = "/Images/MaleFrontCrop.png";
    public string Arrow = "fa fa-refresh";
    public string AddCollectionButton = "fa fa-plus";
    public string TurnAround { get; set; }
    public string Gender { get; set; }
    public string Width { get; set; }
    public string Height { get; set; }
    public string NewPinAdded { get; set; }
    public bool AddButtonPressed { get; set; }
    public bool AcceptButtonPressed { get; set; }
    public bool PointClicked { get; set; }

    private IEnumerable<Collection> collections = new[]
    {
        new Collection {CollectionID = 1, CollectionName = "Venstre skulder", Location = new LocationOnBody(), PictureList = new List<PictureInfo>()},
        new Collection {CollectionID = 1, CollectionName = "Højre skulder", Location = new LocationOnBody(), PictureList = new List<PictureInfo>()},
        new Collection {CollectionID = 1, CollectionName = "Venstre fod", Location = new LocationOnBody(), PictureList = new List<PictureInfo>()},
        new Collection {CollectionID = 1, CollectionName = "Højre fod", Location = new LocationOnBody(), PictureList = new List<PictureInfo>()}
    };

    #endregion


    public void TurnAroundModel()
    {
        GetGender();

        if (Gender == "G")
        {

            if (this.FrontOrBack == "/Images/FemaleBackCrop.png")
            {
                this.FrontOrBack = "/Images/FemaleFrontcrop.png";
            }
            else
            {
                this.FrontOrBack = "/Images/FemaleBackCrop.png";
            }
        }

        else if (Gender == "B")
        {
            if (this.FrontOrBack == "/Images/MaleBackCrop.png")
            {
                this.FrontOrBack = "/Images/MaleFrontCrop.png";
            }
            else
            {
                this.FrontOrBack = "/Images/MaleBackCrop.png";
            }
        }
    }

    public void GetGender()
    {
        //PatientInfo = LogInController.HandlePatientInfo();
        Gender = PatientInfo.Gender;
    }


    //Zoom forsøg - virker ikke helt med event
    //https://stackoverflow.com/questions/54222913/scrollable-image-stack-using-blazor-component/54227687

    int imgNumber = 0;
    string img => $"/Images/FemaleBackCrop {imgNumber}.png";
    string img2 => $"/Images/pin.png";

    public class WheelEventArgs : Microsoft.AspNetCore.Components.Web.MouseEventArgs { public int DeltaY { get; } }

    Task MouseWheel(WheelEventArgs args)
    {
        imgNumber += Math.Sign(args.DeltaY);
        if (imgNumber == 43) imgNumber = 0;
        if (imgNumber == -1) imgNumber = 42;
        return Task.CompletedTask;
    }


    #region Coordinates

    private void ChoosePoint()
    {
    //NewPinAdded = "pin.png";
        AddButtonPressed = true;
    }

    private void GetCoordinates(MouseEventArgs e)
    {
        int x = Convert.ToInt32(e.ScreenX);
        int y = Convert.ToInt32(e.ScreenY);

        HandleLocation(e);
    }

    private void HandleLocation(MouseEventArgs e)
    {
        if (AddButtonPressed == true)
        {
            if (e.ScreenX > 1185 && e.ScreenX < 1225 && e.ScreenY > 270 && e.ScreenY < 335)
            {
                Debug.WriteLine("Hoved");
                Debug.WriteLine("Koordinater: {0}, {1}", e.ScreenX, e.ScreenY);
                bodyPart = BodyPart.Head;

                PointClicked = true;
            }
            else if (e.ScreenX < 1185 && e.ScreenX > 1225)
            {
                Debug.WriteLine("Ikke hovedet");
                Debug.WriteLine("Koordinater: {0}, {1}", e.ScreenX, e.ScreenY);
            }
        }

        else
        {
            Debug.WriteLine("lort");
        }
    }

    private void AcceptPosition()
    {
        NavigateToCollectionPage();
    }

    private void NavigateToCollectionPage()
    {
        NavManager.NavigateTo("/collectionPage");
    }

    #endregion

    #region OnStartUp


    public void DisplayPatientModel()
    {
        GetGender();

        if (Gender == "G")
        {
            FrontOrBack = "/Images/FemaleFrontcrop.png";
            Width = "212px";
            Height = "477px";
        }

        else if (Gender == "B")
        {
            FrontOrBack = "/Images/MaleFrontCrop.png";
            Width = "270px";
            Height = "520px";
        }
    }

    Task StartupTask()
    {
        return Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        DisplayPatientModel();
        await StartupTask();
    }

    #endregion
}