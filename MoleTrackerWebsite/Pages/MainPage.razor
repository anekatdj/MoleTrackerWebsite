@page "/mainPage"

@using PW_BusinessLogicLayer.Interfaces
@using DataClasses.Domain
@using System.Drawing
@using System.Net.Mime
@using System.Diagnostics
@using System.Diagnostics.Eventing.Reader

@inject NavigationManager NavManager
@inject SessionInfo SessionInfo
@inject PatientInfo PatientInfo
@inject ILogInController LogInController
@*To find coordinates*@
@inject IJSRuntime JS;


<link href="css/CSSStyles.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" /> @*EYE*@

@if (!SessionInfo.LoggedIn)
{
    NavManager.NavigateTo("/patientLogin");
}

<h1>Velkommen, @PatientInfo.Name</h1>

<p>Her kan du sammenligne de billeder, du har taget med MoleTracker, så du nemt og hurtigt kan se efter forandringer i dine modermærker.</p>

<div class="row align-items-start" style="height: auto; width: auto">

    <div class="col">
        <div class="tabelcontainer" style="overflow: scroll; height: 500px; width: 400px">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Personlige samlinger</th>
                    </tr>
                </thead>
                <tbody @onclick=NavigateToCollectionPage style="cursor:grab">
                    @foreach (Collection collection in collections)
                    {
                        <tr>
                            <td>@collection.CollectionName</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>


    <div class="col">
        @*padding og sticky*@
        <div style="width: 400px">
            <img id="PatientModel" src="@FrontOrBack" style="float: right; width:@Width; height: @Height;" @onclick="GetCoordinates" /> @*onmousewheel="@MouseWheel"*@
            <button style="float:right" class="@Arrow" @onclick="TurnAroundModel"></button>

        </div>
    </div>

    @*636*1431 billedstørrelse*@



</div>

<div class="col align-self-end">
    @if (AddButtonPressed == false)
    {
        <button style="float: right; border-radius: 28px;" class="@AddCollectionButton" @onclick="ChoosePoint"></button>
        <label style="float: right; margin-right: 1%">Klik her for at tilføje en ny samling</label>
    }

    @if (AddButtonPressed == true)
    {
        @if (PointClicked == true)
        {
            <button style="float: right; border-radius: 28px;" @onclick="AcceptPosition">Godkend</button>
            <p style="float: right; color: crimson; margin-right: 15px">Vælg placering af modermærke</p>
        }
        @if (PointClicked == false)
        {
            <button style="float: right; border-radius: 28px;" disabled="@true">Godkend</button>
            <p style="float: right; color: crimson; margin-right: 15px">Vælg placering af modermærke</p>
        }
    }



</div>

<p style="font-size: 10px">Bemærk venligst at MoleTracker ikke diagnosticerer hudkræft. Hvis du er bekymret for et eller flere modermærker, skal du kontakte din læge.</p>





@code {

    #region Properties and fields

    public enum Orientation
    {
        Nedre,
        Øvre,
        Højre,
        Venstre
    }

    public enum BodyPart
    {
        Pande,
        Kind,
        Næse,
        Læber,
        Hage,
        Øre,
        Hals,
        Skulder,
        Bryst,
        Mave,
        Overarm,
        Underarm,
        Håndflade,
        Tommelfinger,
        Finger,
        Håndryg,
        Underliv,
        Lår,
        Knæ,
        Underben,
        Fod,
        Baghoved,
        Nakke,
        Bagskulder,
        Ryg,
        Balle,
        Baglår,
        Knæhase,
        Læg,
        Hæl,
        Unavngivet
    }

    private BodyPart bodyPart = BodyPart.Unavngivet;
    public string FrontOrBack = "/Images/MaleFrontCrop.png";
    public string Arrow = "fa fa-refresh";
    public string AddCollectionButton = "fa fa-plus";
    public string TurnAround { get; set; }
    public string Gender { get; set; }
    public string Width { get; set; }
    public string Height { get; set; }
    public string NewPinAdded { get; set; }
    public bool AddButtonPressed { get; set; }
    public bool AcceptButtonPressed { get; set; }
    public bool PointClicked { get; set; }

    private IEnumerable<Collection> collections = new[]
    {
        new Collection {CollectionID = 1, CollectionName = "Venstre skulder", Location = new LocationOnBody(), PictureList = new List<PictureInfo>()},
        new Collection {CollectionID = 1, CollectionName = "Højre skulder", Location = new LocationOnBody(), PictureList = new List<PictureInfo>()},
        new Collection {CollectionID = 1, CollectionName = "Venstre fod", Location = new LocationOnBody(), PictureList = new List<PictureInfo>()},
        new Collection {CollectionID = 1, CollectionName = "Højre fod", Location = new LocationOnBody(), PictureList = new List<PictureInfo>()}
    };

    #endregion


    public void TurnAroundModel()
    {
        GetGender();

        if (Gender == "G")
        {

            if (this.FrontOrBack == "/Images/FemaleBackCrop.png")
            {
                this.FrontOrBack = "/Images/FemaleFrontcrop.png";
            }
            else
            {
                this.FrontOrBack = "/Images/FemaleBackCrop.png";
            }
        }

        else if (Gender == "B")
        {
            if (this.FrontOrBack == "/Images/MaleBackCrop.png")
            {
                this.FrontOrBack = "/Images/MaleFrontCrop.png";
            }
            else
            {
                this.FrontOrBack = "/Images/MaleBackCrop.png";
            }
        }
    }

    public void GetGender()
    {
        //PatientInfo = LogInController.HandlePatientInfo();
        Gender = PatientInfo.Gender;
    }


    //Zoom forsøg - virker ikke helt med event
    //https://stackoverflow.com/questions/54222913/scrollable-image-stack-using-blazor-component/54227687

    int imgNumber = 0;
    string img => $"/Images/FemaleBackCrop {imgNumber}.png";
    string img2 => $"/Images/pin.png";

    public class WheelEventArgs : Microsoft.AspNetCore.Components.Web.MouseEventArgs { public int DeltaY { get; } }

    Task MouseWheel(WheelEventArgs args)
    {
        imgNumber += Math.Sign(args.DeltaY);
        if (imgNumber == 43) imgNumber = 0;
        if (imgNumber == -1) imgNumber = 42;
        return Task.CompletedTask;
    }


    #region Coordinates

    private void ChoosePoint()
    {
        //NewPinAdded = "pin.png";
        AddButtonPressed = true;
    }

    //Klasse til skærmmål
    public class BoundingClientRect
    {
        public double X { get; set; }
        public double Y { get; set; }
        public double Width { get; set; }
        public double Height { get; set; }
        public double Top { get; set; }
        public double Right { get; set; }
        public double Bottom { get; set; }
        public double Left { get; set; }
    }

    public int X { get; set; }
    public int Y { get; set; }

    private async Task GetCoordinates(MouseEventArgs e) //Før var det en void
    {
        var result = await JS.InvokeAsync<BoundingClientRect>("PictureClickFind", new object[] { "PatientModel" });
        X = Convert.ToInt32(e.ClientX - result.Left);
        Y = Convert.ToInt32(e.ClientY - result.Top);

        HandleLocation(e);
    }

    private void HandleLocation(MouseEventArgs e)
    {
        if (AddButtonPressed == true)
        {
            if (Y < 203) //alt over hoften
            {
                if (X > 86 && X < 124 && Y > 0 && Y < 19)
                {
                    Debug.WriteLine("Pande");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Pande;

                    PointClicked = true;
                }
                else if ((X > 88 && X < 98 && Y > 35 && Y < 55)||(X > 110 && X < 124 && Y > 35 && Y < 55))
                {
                    Debug.WriteLine("Kind");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Kind;

                    PointClicked = true;
                }
                else if (X > 98 && X < 110 && Y > 27 && Y < 42)
                {
                    Debug.WriteLine("Næse");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Næse;

                    PointClicked = true;
                }
                else if (X > 98 && X < 110 && Y > 42 && Y < 51)
                {
                    Debug.WriteLine("Læber");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Læber;

                    PointClicked = true;
                }
                else if (X > 92 && X < 120 && Y > 51 && Y < 60)
                {
                    Debug.WriteLine("Hage");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Hage;

                    PointClicked = true;
                }
                else if ((X > 83 && X < 87 && Y > 30 && Y < 42)||(X > 125 && X < 130 && Y > 30 && Y < 42))
                {
                    Debug.WriteLine("Øre");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Øre;

                    PointClicked = true;
                }
                else if (X > 92 && X < 120 && Y > 57 && Y < 75)
                {
                    Debug.WriteLine("Hals");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Hals;

                    PointClicked = true;
                }
                else if ((X > 51 && X < 80 && Y > 80 && Y < 108) || (X > 131 && X < 160 && Y > 80 && Y < 108))
                {
                    Debug.WriteLine("Skulder");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Skulder;

                    PointClicked = true;
                }
                else if (X > 67 && X < 143 && Y > 75 && Y < 138)
                {
                    Debug.WriteLine("Bryst");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Bryst;

                    PointClicked = true;
                }
                else if (X > 66 && X < 145 && Y > 138 && Y < 203)
                {
                    Debug.WriteLine("Mave");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Mave;

                    PointClicked = true;
                }
                else if ((X > 44 && X < 61 && Y > 108 && Y < 161) || (X > 143 && X < 168 && Y > 108 && Y < 161))
                {
                    Debug.WriteLine("Overarm");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Overarm;

                    PointClicked = true;
                }
                else if ((X > 18 && X < 61 && Y > 161 && Y < 224) || (X > 152 && X < 192 && Y > 161 && Y < 224))
                {
                    Debug.WriteLine("Underarm");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Underarm;

                    PointClicked = true;
                }



                //else if ( X > 3 && X < && Y > && Y <)
                //{
                //    Debug.WriteLine("lort");
                //    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                //}
            }

            else //alt under hoften
            {
                if ((X > 13 && X < 33 && Y > 224 && Y < 253) || (X > 178 && X < 199 && Y > 224 && Y < 253))
                {
                    Debug.WriteLine("Håndflade");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Håndflade;

                    PointClicked = true;
                }
                else if ((X > 0 && X < 13 && Y > 231 && Y < 252) || (X > 199 && X < 211 && Y > 231 && Y < 255))
                {
                    Debug.WriteLine("Tommelfinger");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Tommelfinger;

                    PointClicked = true;
                }
                else if ((X > 9 && X < 28 && Y > 253 && Y < 274) || (X > 184 && X < 204 && Y > 253 && Y < 274))
                {
                    Debug.WriteLine("Finger");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Finger;

                    PointClicked = true;
                }
                else if (X > 58 && X < 155 && Y > 203 && Y < 246)
                {
                    Debug.WriteLine("Underliv");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Underliv;

                    PointClicked = true;
                }
                else if ((X > 57 && X < 105 && Y > 246 && Y < 317) || (X > 108 && X < 155 && Y > 246 && Y < 317))
                {
                    Debug.WriteLine("Lår");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Lår;

                    PointClicked = true;
                }
                else if ((X > 73 && X < 103 && Y > 317 && Y < 352) || (X > 110 && X < 141 && Y > 317 && Y < 352))
                {
                    Debug.WriteLine("Knæ");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Knæ;

                    PointClicked = true;
                }
                else if ((X > 70 && X < 101 && Y > 352 && Y < 438) || (X > 113 && X < 144 && Y > 352 && Y < 438))
                {
                    Debug.WriteLine("Underben");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Underben;

                    PointClicked = true;
                }
                else if ((X > 75 && X < 101 && Y > 438 && Y < 476) || (X > 112 && X < 137 && Y > 438 && Y < 476))
                {
                    Debug.WriteLine("Fod");
                    Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
                    bodyPart = BodyPart.Fod;

                    PointClicked = true;
                }
            }

        }
        //Debug.WriteLine("Koordinater: {0}, {1}", X, Y);
    }


    private void AcceptPosition()
    {
        NavigateToCollectionPage();
    }

    private void NavigateToCollectionPage()
    {
        NavManager.NavigateTo("/collectionPage");
    }

    #endregion

    #region OnStartUp


    public void DisplayPatientModel()
    {
        GetGender();

        if (Gender == "G")
        {
            FrontOrBack = "/Images/FemaleFrontcrop.png";
            Width = "212px";
            Height = "477px";
        }

        else if (Gender == "B")
        {
            FrontOrBack = "/Images/MaleFrontCrop.png";
            Width = "270px";
            Height = "520px";
        }
    }

    Task StartupTask()
    {
        return Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        DisplayPatientModel();
        await StartupTask();
    }

    #endregion
}