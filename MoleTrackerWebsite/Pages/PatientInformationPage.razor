@page "/PatientInformationPage"

@using BusinessLogicLayer
@using BusinessLogicLayer.BusinessLogicLayerInterfaces
@using DataClasses.Domain

@inject ISelectPatientController SelectPatientController
@inject NavigationManager NavManager;

<h3>Patientoplysninger</h3>

@if (errorOccurred)
{
    @foreach (string error in patientInfoErrors)
    {
<div>
    <span  class="oi oi-warning" style="margin: 10px; font-size: 30px; color: red;">
        @error
    </span>
</div>
    }

}
<table id="patientInformationTable" class="table table-striped">
    <tbody>
    <tr>
        <td>
            Navn
        </td>
        <td>
            @patientInfo.Name
        </td>
    </tr>    
    <tr>
        <td>
            Fødselsdato
        </td>
        <td>
            @DateOfBirth
        </td>
    </tr>  
    <tr>
        <td>
            Køn
        </td>
        <td>
            @patientInfo.Gender
        </td>
    </tr>  
    <tr>
        <td>
            E-mail
        </td>
        <td>
            @patientInfo.Email
        </td>
    </tr>  
    <tr>
        <td>
            CPR-nummer
        </td>
        <td>
            @patientInfo.CPR
        </td>
    </tr>
    </tbody>
</table>

@code {

    private PatientInfoDomain patientInfo;
    private string DateOfBirth;
    private List<string> patientInfoErrors = new List<string>();
    private bool errorOccurred = false;
    //private string Gender;


    protected override async Task OnInitializedAsync()
    {
        SelectPatientController.BirthDataCalcFailed = false;

        DateOfBirth = "";

        SelectPatientController.HandlePatientInfo();

        patientInfo = SelectPatientController.SelectedPatient;

        DateOfBirth = SelectPatientController.DateOfBirth;


        if (SelectPatientController.BirthDataCalcFailed)
        {
            patientInfoErrors.Add("En fejl opstod. Tjek om patientens CPR-nummer er korrekt");
            errorOccurred = true;
        }



    }

}
