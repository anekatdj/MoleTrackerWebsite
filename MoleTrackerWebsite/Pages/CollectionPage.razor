@page "/collectionPage"
@using DataClasses.Domain
@using BlazorInputFile
@using System.IO
@using PW_BusinessLogicLayer.Interfaces

<link href="css/CSSStyles.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" /> @*EYE*@

@inject Collection CollectionInfo
@inject LocationOnBody Location
@inject PictureInfo Picture
@inject IDeleteCollectionController DeleteCollectionController
@inject NavigationManager NavManager



<div class="row">
    @if (!SidebarVisible)
    {
        <div class="col">
            <input style="width: 45%; height: 45%; margin-left: 35%; font-size: 24pt; color: @FontColor" disabled="@IsDisabled" type="text" @oninput="OnInputHandler" placeholder="@CollectionInfo.CollectionName" />
            <button style="border-radius: 9px" class="@EditPencil" @onclick="EditName"> Redigér</button>
        </div>
    }

    <div class="col" style="float: right">
        <button style="float: right" class="fa fa-ellipsis-h" @onclick="Sidebar"></button> @*onclick="Sidebar"*@
        @*Denne skal flyve ind fra siden over det eksisterende på siden*@
        @if (SidebarVisible) //class="td"
        {
            <div id="mySidebar" class="sidebar" style="float: right; width: 30%; height: 100%">
                <h2 style="color: azure">Indstillinger</h2>
                <div style="color: azure; margin-left: 5%; cursor: pointer" @onclick="ItemMarked">
                    <span class="@Flag" style="transform: scaleX(-1);"></span>
                    Markér samling
                </div>
                @if (!CollectionDeleted)
                {
                    <div style="color: azure; margin-left: 5%; cursor: pointer" @onclick="DialogShow">
                        <span class="fa fa-trash-o"></span>
                        Slet samling
                    </div>
                }
                @if (CollectionDeleted)
                {
                    <div style="color: azure; margin-left: 5%; cursor: pointer" @onclick="DeleteCollection">
                        <span class="fa fa-trash-o"></span>
                        Slet samling
                    </div>

                    <div class="modal-content">
                        <div class="modal-dialog">
                            <div class="modal-header">
                                <p class="modal-title" id="titleLabel">Ønsker du at slette denne samling?</p>
                                <button class="fa fa-check" style="margin-right: 1%" @onclick="DeleteCollection">Ja</button>
                                <button class="fa fa-close" @onclick="DeletionCancelled">Nej</button>
                            </div>
                        </div>
                    </div>
                }
                <div class="dropdown-toggle" style="color: azure; margin-left: 5%; cursor: pointer" @onclick="Notifications">
                    <span class="fa fa-clock-o"></span>
                    Ændr follow-up notifikationer

                </div>
                @if (NotificationVisible)
                {
                    @*<div class="dropdown-toggle" style="color: azure; margin-left: 5%" @onclick="Days">Dag</div>
                        @if (DaysVisible)
                        {*@
                    <div style="color: azure; width: 50%; margin-left: 5%; margin-bottom: 5%">
                        <label>Dag: </label>
                        <select class="form-control" @onchange="DaysChanged">
                            <option value="">@_dayOption</option>
                            @foreach (var day in weekdaysList)
                            {
                                <option value="@day">@day</option>
                            }
                        </select>
                    </div>


                    @*<div class="dropdown-toggle" style="color: azure; margin-left: 5%" @onclick="Hours">Tidspunkt</div>
                        @if (HoursVisible)
                        {*@
                    <div style="color: azure; width: 35%; margin-left: 5%; margin-bottom: 5%">
                        <label>Klokken: </label>
                        <select class="form-control" @onchange="HourChanged">
                            <option>@_hourOption</option>
                            @foreach (var hour in hoursList)
                            {
                                <option value="@hour">@hour.00</option>
                            }
                        </select>
                    </div>


                    <div style="color: azure; width: 40%; margin-left: 5%; margin-bottom: 5%">
                        @*<div class="dropdown-toggle" style="color: azure; margin-left: 5%" @onclick="Weeks">Antal uger</div>
                            @if (WeeksVisible)
                            {*@
                        <label>Antal uger: </label>
                        <select class="form-control" @onchange="WeeksChanged">
                            <option>@_weekOption</option>
                            @foreach (var week in weeksList)
                            {
                                <option value="@week">Hver @week. uge</option>
                            }
                        </select>
                    </div>
                }
            </div>
        }
    </div>
</div>

@if (!SidebarVisible)
{
    <div class="row">
        <div class="col" style="float: left">
            @if (ShowUploadedMolePicture == true)
            {
                <img src="Images/@imageDataUrl" style="width:300px;height:300px"/>
            }
            @*<img src="Images/download.jfif"/>*@
        </div>

        <div class="col">

            <div class="col" style="overflow: scroll; height: 100%; width: 75%; float: right">

                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Modermærker for denne samling</th>
                        </tr>
                    </thead>
                    <tbody style="cursor: pointer">
                        @foreach (Collection collection in collections)
                        {
                            <tr>
                                <td>@Picture.DateOfUpload</td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>

        </div>
    </div>
}


<div class="row">
    <div class="col">
        @if (!SidebarVisible)
        {
            <div style="margin-top: 2%">
                <label style="font-weight: bold">Noter</label>
            </div>
            <div style="float: left">
                <input type="text" class="form-control" style="overflow: scroll; width: 100%; height: 100%" placeholder="Indtast noter her..." />
            </div>
        }
    </div>

    <div class="col" style="margin-top: 2%">
        <div class="col" style="float: right">
            <div>
                <button  class="@AddPictureButton" @onclick="ShowUploadedMole" style="border-radius: 10%; float: right; margin-top: 20%" >Upload billede</button>
               
                @*@if (ShowUploadedMolePicture == true)
        {
            <img src="Images/@imageDataUrl" style="width: 300px;height:300px"/>
        }*@
            </div>
            <InputFile OnChange="HandleSelection"/> @*OnChange="HandleSelection"*@
            @*@if (!string.IsNullOrEmpty(imageDataUrl))
            {
                <img src="Images/@imageDataUrl" />
             }*@ 
        </div>
    </div>
</div>





@code {
    private List<Collection> collections = new List<Collection>();
    //private IEnumerable<Collection> collections = new[]
    //{
    //    new Collection {CollectionID = 1, CollectionName = "Venstre skulder", Location = new LocationOnBody(), PictureList = new List<PictureInfo>()},
    //    new Collection {CollectionID = 1, CollectionName = "Højre skulder", Location = new LocationOnBody(), PictureList = new List<PictureInfo>()}
    //};

    public bool SaveDisabled { get; set; } = true;
    public string AddPictureButton = "fa fa-picture-o";
    public bool CollectionDeleted { get; set; }
    public string EditPencil = "fa fa-pencil";
    public bool IsDisabled { get; set; } = true;
    public string FontColor { get; set; }

    private void EditName()
    {
        if (EditPencil == "fa fa-pencil")
        {
            IsDisabled = false;
            EditPencil = "Gem";
        }

        else
        {
            IsDisabled = true;
            FontColor = "Black";
            EditPencil = "fa fa-pencil";
        }

    }

    private void OnInputHandler(ChangeEventArgs e)
    {
        CollectionInfo.CollectionName = e.Value.ToString();
    }

    public bool SidebarVisible { get; set; }

    private void Sidebar()
    {
        SidebarVisible = !SidebarVisible;

    }

    public string Flag = "fa fa-flag-o";

    public void ItemMarked()
    {
        if (Flag == "fa fa-flag-o")
        {
            Flag = "fa fa-flag-checkered";
        }
        else
        {
            Flag = "fa fa-flag-o";
        }
    }

    public void DialogShow()
    {
        //SidebarVisible = !SidebarVisible;
        CollectionDeleted = true;
    }

    public void DeleteCollection()
    {
        DeleteCollectionController.DeleteCollection();
        NavManager.NavigateTo("/mainPage");
    }

    public void DeletionCancelled()
    {
        NavManager.NavigateTo("/collectionPage");
    }

    public bool NotificationVisible { get; set; }

    public void Notifications()
    {
        NotificationVisible = !NotificationVisible;
    }

    public bool DaysVisible { get; set; }

    public void Days()
    {
        DaysVisible = !DaysVisible;
    }

    public bool HoursVisible { get; set; }

    public void Hours()
    {
        HoursVisible = !HoursVisible;
    }

    public bool WeeksVisible { get; set; }

    public void Weeks()
    {
        WeeksVisible = !WeeksVisible;
    }

    private string _dayOption { get; set; } = "--Dag--";
    private string _hourOption { get; set; } = "--Time--";
    private string _weekOption { get; set; } = "--Uger--";

    public void DaysChanged(ChangeEventArgs dayEvent)
    {
        _dayOption = dayEvent.Value.ToString();
        StateHasChanged();
    }

    public void HourChanged(ChangeEventArgs hourEvent)
    {
        _hourOption = hourEvent.Value.ToString();
        StateHasChanged();
    }

    public void WeeksChanged(ChangeEventArgs weekEvent)
    {
        _weekOption = weekEvent.Value.ToString();
        StateHasChanged();
    }


    private List<string> weekdaysList = new List<string>(new string[] { "Mandag", "Tirsdag", "Onsdag", "Torsdag", "Fredag", "Lørdag", "Søndag" });
    private List<string> weeksList = new List<string>(new string[] { "1", "2", "4", "6", "8", "12" });
    private List<string> hoursList = new List<string>(new string[] {"00","01","02","03","04","05","06","07", "08", "09", "10", "11", "12", "13",
                                                                            "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"});

    string status;

    public string imageDataUrl { get; set; }
    public bool ShowUploadedMolePicture{ get; set; }

    private void ShowUploadedMole()
    {
        ShowUploadedMolePicture = !ShowUploadedMolePicture;
    }

    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            var fileType = GetFileType(file.Name);
            if (fileType == "image")
            {
                var ms = new MemoryStream();
                await file.Data.CopyToAsync(ms);
                string imageBase64Data = Convert.ToBase64String(ms.ToArray());
                imageDataUrl = string.Format("image/png;base64,{0}", imageBase64Data);
                //imageDataUrl = file.Name;

                using (FileStream newFile = new FileStream("wwwroot\\images\\" + file.Name, FileMode.Create, FileAccess.Write))
                {
                    ms.WriteTo(newFile);
                }
            }
        }
        status = $"Finished loading {file.Size} bytes from {file.Name}";

    }

    private string GetFileType(string name)
    {
        string result = "";
        if (name.Contains("jpeg") || name.Contains("jpg") || name.Contains("png") || name.Contains("gif")||name.Contains("jfif"))
        {
            result = "image";
        }else if (name.Contains("text"))
        {
            result = "text";
        }
        return result;
    }
}
